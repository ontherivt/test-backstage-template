apiVersion: backstage.io/v1beta2
kind: Template
# some metadata about the template itself
metadata:
  name: test-template
  title: Test Action template
  description: shells out
  tags:
    - poc
    - infrastructure
spec:
  owner: outside/recsys
  type: service
  # templater: cookiecutter # this will come in handy for creating python projects from template repos
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Give it a name
      required:
        - serviceName
      properties:
        serviceName:
          title: Name
          type: string
          description: Unique name of the service
          ui:autofocus: true
          ui:options:
            rows: 1
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        description:
          title: Repo description
          type: string


  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: cookiecutter
      action: fetch:cookiecutter
      name: Cookiecutter Template
      input:
        url: https://github.com/tiangolo/full-stack-fastapi-postgresql
        values:
          project_name: {{ parameters.serviceName }}
          project_slug: {{ parameters.serviceName }}
          secret_key: 99d3b1f01aa639e4a76f4fc281fc834747a543720ba4c8a8648ba755aef9be7f
          domain_main: foobar.com
          domain_staging: stage.foobar.com
          first_superuser: foo
          first_superuser_password: bar
          postgres_password: foobarbaz
    - id: create-repo
      name: Create the github repo
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: {{ paramters.description }}
        repoVisibility: private
        repoUrl: '{{ parameters.repoUrl }}'
    - id: test-shell
      name: Shell out
      action: outside:ansible-test
      input:
        values:
          serviceName: '{{ parameters.serviceName }}'
    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: '{{ steps.create-repo.output.repoContentsUrl }}'
    #     catalogInfoPath: '/catalog-info.yaml'