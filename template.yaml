apiVersion: backstage.io/v1beta2
kind: Template
# some metadata about the template itself
metadata:
  name: fastapi-template
  title: FastAPI + PostgreSQL Service
  description: Creates a basic service using FastAPI, Postres, Pipenv
  tags:
    - poc
    - infrastructure
spec:
  owner: outside/recsys
  type: service
  # templater: cookiecutter # this will come in handy for creating python projects from template repos
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Give it a name
      required:
        - serviceName
        - serviceTitle
        - team
        - system
      properties:
        serviceName:
          title: Slug
          type: string
          description: Unique slug for the service
          ui:autofocus: true
          ui:options:
            rows: 1
        serviceTitle:
          title: Name
          type: string
          description: Human-readable name of the service
        team:
          title: Team
          type: string
          description: The team that maintains this service
        system:
          title: System
          type: string
          description: The system that this is a part of
    - title: Choose a location
      required:
        - repoUrl
        - description
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        description:
          title: Repo description
          type: string


  steps:
    - id: cookiecutter
      action: fetch:cookiecutter
      name: Cookiecutter template
      input:
        url: https://github.com/ontherivt/fast-api-cookiecutter.git
        values:
          service_name: '{{ parameters.serviceName }}'
          service_title: '{{ parameters.serviceTitle}}'
          team: '{{ parameters.team }}'
          system: '{{ parameters.system }}'
    - id: create-repo
      name: Create the github repo
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: '{{ parameters.description }}'
        repoVisibility: private
        repoUrl: '{{ parameters.repoUrl }}'
        sourcePath: '{{ parameters.serviceName }}'
    - id: test-shell
      name: Shell out
      action: outside:ansible-test
      input:
        values:
          serviceName: '{{ parameters.serviceName }}'
    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: '{{ steps.create-repo.output.repoContentsUrl }}'
    #     catalogInfoPath: '/catalog-info.yaml'